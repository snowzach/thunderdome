syntax="proto3";
package tdrpc;

import "tdrpc/tdrpc.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = "git.coinninja.net/backend/thunderdome/tdrpc";

option (gogoproto.enum_stringer_all) = false;

service AdminRPC {

    // List Accounts
    rpc ListAccounts(AdminAccountsRequest) returns (AdminAccountsResponse) {
        option (google.api.http) = {
            get: "/admin/accounts"
        };
    }

    // Get Account
    rpc GetAccount(AdminGetAccountRequest) returns (Account) {
        option (google.api.http) = {
            get: "/admin/accounts/{id}"
        };
    }

    // Update Account
    rpc UpdateAccount(AdminUpdateAccountRequest) returns (Account) {
        option (google.api.http) = {
            patch: "/admin/accounts/{id}"
            body: "*"
        };
    }

    // Decode a payment request
    rpc Ledger(LedgerRequest) returns (LedgerResponse) {
        option (google.api.http) = {
            get: "/admin/ledger"
        };
    }

}

// AdminAccountsRequest is used to request one or more accounts
message AdminAccountsRequest {
    // Filter values (id, address)
    map<string, string> filter = 1;
    // Offset, Limit for pagination
    int32 offset = 3;
    int32 limit = 4;
}

message AdminAccountsResponse {
    // The list of accounts
    repeated Account accounts = 1;
}

// Used to get an account
message AdminGetAccountRequest {
    // The id of the account
    string id = 1;
    // The address of the account
    string address = 2;
}

message AdminUpdateAccountRequest {
    // The id of the account
    string id = 1;
    // The locked status of the account
    bool locked = 2;
}