{
  "swagger": "2.0",
  "info": {
    "title": "Thunderdome RPC",
    "version": "1.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/account": {
      "get": {
        "summary": "Get/Create user account",
        "operationId": "GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcAccount"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/create": {
      "get": {
        "summary": "Create a auto-generated payment request with no value. If one exist already, return that.",
        "operationId": "CreateGenerated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcCreateResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "allow_locked",
            "description": "Allow generated requests when the user account is locked. Requires Agent Authorization.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      },
      "post": {
        "summary": "Create a payment request",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcCreateResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tdrpcCreateRequest"
            }
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/decode": {
      "get": {
        "summary": "Decode a payment request",
        "operationId": "Decode2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcDecodeResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "request",
            "description": "The payment request to be decoded.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      },
      "post": {
        "summary": "Decode a payment request",
        "operationId": "Decode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcDecodeResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tdrpcDecodeRequest"
            }
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/ledger": {
      "get": {
        "summary": "Get request ledger",
        "operationId": "Ledger",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcLedgerResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "after",
            "description": "After filtering for creattion time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "offset",
            "description": "Offset, Limit for pagination.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/pay": {
      "post": {
        "summary": "Pay a request",
        "operationId": "Pay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcLedgerRecordResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tdrpcPayRequest"
            }
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/pay/preauth": {
      "post": {
        "summary": "Create a pre-authorized request used for locking up funds until ready to pay",
        "operationId": "CreatePreAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcLedgerRecordResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tdrpcCreateRequest"
            }
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/pay/preauth/{id}": {
      "get": {
        "summary": "Get a pre-authorized request",
        "operationId": "GetPreAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcLedgerRecordResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      },
      "delete": {
        "operationId": "ExpirePreAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcLedgerRecordResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    },
    "/withdraw": {
      "post": {
        "summary": "Withdraw funds",
        "operationId": "Withdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tdrpcWithdrawResponse"
            }
          },
          "400": {
            "description": "There was an error processing the request. The error message is generally designed to present to the user.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "\u003cerror details\u003e",
                "code": 3,
                "message": "\u003cerror details\u003e"
              }
            }
          },
          "401": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "invalid login",
                "code": 16,
                "message": "invalid login"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "not found",
                "code": 5,
                "message": "not found"
              }
            }
          },
          "500": {
            "description": "Internal error. The back-end experienced an error. No useful information will be provided in error message.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "error": "internal error",
                "code": 5,
                "message": "internal error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tdrpcWithdrawRequest"
            }
          }
        ],
        "tags": [
          "ThunderdomeRPC"
        ]
      }
    }
  },
  "definitions": {
    "LedgerRecordDirection": {
      "type": "string",
      "enum": [
        "IN",
        "OUT"
      ],
      "default": "IN",
      "title": "Ledger Record Direction"
    },
    "LedgerRecordStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "COMPLETED",
        "EXPIRED",
        "FAILED"
      ],
      "default": "PENDING",
      "title": "Ledger Record Status"
    },
    "tdrpcAccount": {
      "type": "object",
      "example": {
        "id": "pubkey:abcabc123123",
        "created_at": "2019-10-01T18:33:17.606Z",
        "updated_at": "2019-10-01T18:33:17.606Z",
        "address": "2MymaDj8Jfv5tXv6bhjVVpisHvsbsXmhFbE",
        "balance": 100000,
        "pending_in": 5000,
        "pending_out": 6000,
        "locked": true
      },
      "properties": {
        "id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created at timestamp"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Update at timestamp"
        },
        "address": {
          "type": "string",
          "title": "The BTC address for the account"
        },
        "balance": {
          "type": "integer",
          "format": "int64",
          "title": "The current balance"
        },
        "pending_in": {
          "type": "integer",
          "format": "int64",
          "title": "The current pending incoming balance"
        },
        "pending_out": {
          "type": "integer",
          "format": "int64",
          "title": "The current pending outgoing balance"
        },
        "locked": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the account locked"
        }
      },
      "title": "Account"
    },
    "tdrpcCreateRequest": {
      "type": "object",
      "example": {
        "memo": "Sample Memo",
        "value": 10000,
        "expires": 86400
      },
      "properties": {
        "memo": {
          "type": "string",
          "title": "An optional memo to include"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "title": "The amount for the payment request. (Zero means no pre-set value)"
        },
        "expires": {
          "type": "integer",
          "format": "int64",
          "title": "How long (in seconds) the payment request should be valid for"
        }
      },
      "title": "Create Request"
    },
    "tdrpcCreateResponse": {
      "type": "object",
      "example": {
        "request": "lnrabcabc123..."
      },
      "properties": {
        "request": {
          "type": "string",
          "title": "The payment request string"
        }
      },
      "title": "Create Response"
    },
    "tdrpcDecodeRequest": {
      "type": "object",
      "example": {
        "request": "lnrabcabc123..."
      },
      "properties": {
        "request": {
          "type": "string",
          "title": "The payment request to be decoded"
        }
      },
      "title": "Decode Request"
    },
    "tdrpcDecodeResponse": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "title": "Desintation Node"
        },
        "payment_hash": {
          "type": "string",
          "title": "Payment hash for the request"
        },
        "num_satoshis": {
          "type": "integer",
          "format": "int64",
          "title": "The number of Satoshis"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "The timestamp of the request"
        },
        "expiry": {
          "type": "string",
          "format": "int64",
          "title": "The expiration of the request"
        },
        "description": {
          "type": "string",
          "title": "Optional description/memo of the request"
        },
        "description_hash": {
          "type": "string",
          "title": "If the description is too long, a shorter hash of the description"
        },
        "fallback_addr": {
          "type": "string",
          "title": "Fallback payment address"
        },
        "cltv_expiry": {
          "type": "string",
          "format": "int64"
        },
        "route_hints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tdrpcRouteHint"
          },
          "title": "Route hints"
        }
      },
      "title": "Decode Response"
    },
    "tdrpcHopHint": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "chan_id": {
          "type": "string",
          "format": "uint64"
        },
        "fee_base_msat": {
          "type": "integer",
          "format": "int64"
        },
        "fee_proportional_millionths": {
          "type": "integer",
          "format": "int64"
        },
        "cltv_expiry_delta": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Hop Hint"
    },
    "tdrpcLedgerRecord": {
      "type": "object",
      "example": {
        "id": "c31b53fd5e93b90250aa2e2839744dfb7d9f7f768ae395a65531e1a033dcc311",
        "account_id": "pubkey:abcabc123123",
        "created_at": "2019-10-01T18:33:17.606Z",
        "updated_at": "2019-10-01T18:33:17.606Z",
        "expires_at": "2019-10-01T18:33:17.606Z",
        "status": "pending",
        "type": "lightning",
        "direction": "in",
        "value": 100000,
        "network_fee": 7000,
        "processing_fee": 700,
        "memo": "Example ledger record"
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID for the record. Lightning Payment Hash or BTC transaction"
        },
        "account_id": {
          "type": "string",
          "title": "The user account associated with the request"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created at timestamp"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Update at timestamps"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "title": "Expires at timestamp"
        },
        "status": {
          "$ref": "#/definitions/LedgerRecordStatus",
          "title": "The record status"
        },
        "type": {
          "$ref": "#/definitions/tdrpcLedgerRecordType",
          "title": "The record type (BTC or LN)"
        },
        "direction": {
          "$ref": "#/definitions/LedgerRecordDirection",
          "title": "The direction of the transaction"
        },
        "generated": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is this a generated request"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "title": "The amount of the transaction"
        },
        "network_fee": {
          "type": "integer",
          "format": "int64",
          "title": "The amount of the transaction"
        },
        "processing_fee": {
          "type": "integer",
          "format": "int64",
          "title": "The amount of the transaction"
        },
        "add_index": {
          "type": "string",
          "format": "uint64",
          "title": "The address index of the lightning request"
        },
        "memo": {
          "type": "string",
          "title": "An optional request memo"
        },
        "request": {
          "type": "string",
          "title": "The lightning payment request"
        },
        "error": {
          "type": "string",
          "title": "Any error associated with the request"
        },
        "hidden": {
          "type": "boolean",
          "format": "boolean",
          "title": "Used to hide records that are duplicates"
        }
      },
      "title": "Ledger Record"
    },
    "tdrpcLedgerRecordResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/tdrpcLedgerRecord",
          "title": "The pay request result"
        }
      },
      "title": "A single Ledger Record result"
    },
    "tdrpcLedgerRecordType": {
      "type": "string",
      "enum": [
        "BTC",
        "LIGHTNING"
      ],
      "default": "BTC",
      "title": "Ledger Record Type"
    },
    "tdrpcLedgerResponse": {
      "type": "object",
      "properties": {
        "ledger": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tdrpcLedgerRecord"
          },
          "title": "The ledger records"
        }
      },
      "title": "Ledger Response"
    },
    "tdrpcPayRequest": {
      "type": "object",
      "example": {
        "request": "lnrabcabc123...",
        "value": 10000
      },
      "properties": {
        "request": {
          "type": "string",
          "title": "The payment request string"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "title": "The amount you wish to pay the payment request"
        },
        "estimate": {
          "type": "boolean",
          "format": "boolean",
          "title": "Estimate the pay request that would be created based on the route"
        },
        "pre_auth_id": {
          "type": "string",
          "title": "A pre-authorized request id"
        }
      },
      "title": "Pay Request"
    },
    "tdrpcRouteHint": {
      "type": "object",
      "properties": {
        "hop_hints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tdrpcHopHint"
          },
          "title": "Hop Hints"
        }
      },
      "title": "Route Hint"
    },
    "tdrpcWithdrawRequest": {
      "type": "object",
      "example": {
        "address": "2MymaDj8Jfv5tXv6bhjVVpisHvsbsXmhFbE",
        "value": 100000,
        "sat_per_byte": 40
      },
      "properties": {
        "address": {
          "type": "string",
          "title": "The address to send funds to"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "title": "The amount to send (in satoshis)"
        },
        "blocks": {
          "type": "integer",
          "format": "int32",
          "title": "The target number of blocks this should be confirmed by"
        },
        "sat_per_byte": {
          "type": "integer",
          "format": "int64",
          "title": "A manual setting of fee per"
        },
        "estimate": {
          "type": "boolean",
          "format": "boolean",
          "title": "Estimate the withdraw request that would be created based on fee inputs"
        }
      },
      "title": "Withdraw Request"
    },
    "tdrpcWithdrawResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/tdrpcLedgerRecord",
          "title": "The withdraw request result"
        }
      },
      "title": "Withdraw Response"
    }
  },
  "securityDefinitions": {
    "CN-Auth-Nonce": {
      "type": "apiKey",
      "description": "An optional random string to concatenate after the CN-Auth-Timestamp header before calculating the the signature field. The nonce value can only be used once.",
      "name": "CN-Auth-Nonce",
      "in": "header"
    },
    "CN-Auth-PubKeyString": {
      "type": "apiKey",
      "description": "Hex encoded compressed public key. Example: 020c3a0e7b00e0d8dcccdd931b2d61848392878297ab455272cca9840144681848",
      "name": "CN-Auth-PubKeyString",
      "in": "header"
    },
    "CN-Auth-Signature": {
      "type": "apiKey",
      "description": "Hex encoded signature of signing the `CN-Auth-Timestamp+CN-Auth-Nonce` header. Example: 3045022100aef1851655cd6e7ccc77afc3cd6c8f7a99de855571cea2dce9e94b17b392228f02206b37f35397018eb64d3f68995e6500d3c761c284d6a67a2509947da9137558d1",
      "name": "CN-Auth-Signature",
      "in": "header"
    },
    "CN-Auth-Timestamp": {
      "type": "apiKey",
      "description": "Current time in RFC3339. Example: 2006-01-02T15:04:05Z07:00",
      "name": "CN-Auth-Timestamp",
      "in": "header"
    }
  }
}
